// <auto-generated />
using System;
using Cukiernia.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cukiernia.Infrastructure.Migrations
{
    [DbContext(typeof(CukierniaDbContext))]
    [Migration("20230712102725_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cukiernia.Domain.Entities.Baking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncodedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Bakings");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.ImageUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BakingId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BakingId");

                    b.ToTable("ImageUrls");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.Measure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Measures");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.ProductQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BakingId")
                        .HasColumnType("int");

                    b.Property<int>("SubProductId")
                        .HasColumnType("int");

                    b.Property<int>("SubProductQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BakingId");

                    b.HasIndex("SubProductId");

                    b.ToTable("ProductQuantities");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.SubProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAllergenic")
                        .HasColumnType("bit");

                    b.Property<int>("MeasureId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("MeasureId");

                    b.ToTable("SubProducts");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.ImageUrl", b =>
                {
                    b.HasOne("Cukiernia.Domain.Entities.Baking", "Baking")
                        .WithMany("Images")
                        .HasForeignKey("BakingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baking");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.ProductQuantity", b =>
                {
                    b.HasOne("Cukiernia.Domain.Entities.Baking", "Baking")
                        .WithMany("ProductQuantities")
                        .HasForeignKey("BakingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cukiernia.Domain.Entities.SubProduct", "SubProduct")
                        .WithMany("ProductQuantities")
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baking");

                    b.Navigation("SubProduct");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.SubProduct", b =>
                {
                    b.HasOne("Cukiernia.Domain.Entities.Measure", "Measure")
                        .WithMany("SubProducts")
                        .HasForeignKey("MeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measure");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.Baking", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("ProductQuantities");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.Measure", b =>
                {
                    b.Navigation("SubProducts");
                });

            modelBuilder.Entity("Cukiernia.Domain.Entities.SubProduct", b =>
                {
                    b.Navigation("ProductQuantities");
                });
#pragma warning restore 612, 618
        }
    }
}
